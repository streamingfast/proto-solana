syntax = "proto3";

package dfuse.solana.codec.v1;

option go_package = "github.com/dfuse-io/dfuse-solana/pb/dfuse/solana/codec/v1;pbcodec";

import "google/protobuf/timestamp.proto";

message Slot {
  string id = 1; // hash of the last Entry closing the slot
  uint64 number = 2; // slot number, not block number
  string previous_id = 3; // corresponds to the previous SLOT hash
  uint32 version = 4;
  uint64 root_slot_num = 5; // the root at the current stage in the validator node
  Block block = 6; // optional Block here

  google.protobuf.Timestamp cluster_wallclock = 11;

  repeated Transaction transactions = 7;
  uint32 transaction_count = 8;

  repeated TransactionTrace transaction_traces = 9;
  uint32 transaction_trace_count = 10;
}

message Block {
  string id = 1;  // corresponds to the Slot id (or hash)
  uint64 number = 2; // corresponds to the Slot number for this block
  uint64 block_height = 3;
  string previous_id = 4; // corresponds to the previous_blockhash, might skip some slots, so beware
  uint64 previous_block_slot = 5;
}

message Transaction {
  string id = 1;
  uint64 index = 2; // within the Slot / Entry?

  repeated string signatures = 3;
  Message msg = 4;
}

message Message {
  MessageHeader header = 1;
  repeated bytes account_keys = 2;
  bytes recent_blockhash = 3;
  repeated CompiledInstruction instructions = 4;
}

message MessageHeader  {
  uint32 num_required_signatures = 1;
  uint32 num_readonly_signed_accounts = 2;
  uint32 num_readonly_unsigned_accounts = 3;
}

message CompiledInstruction {
  uint32 program_id_index = 1; // u8
  repeated uint32 accounts = 2; // Vec<u8>
  bytes data = 3;
}

message TransactionTrace {
  string id = 1;
  uint64 index = 2;
  uint64 slot_num = 3;
  string slot_hash = 4;

  repeated string log_messages = 5;

  repeated InstructionTrace instruction_traces = 6; // top-level instructions
}

/**

- instr1 (id=1, parent=0)
- instr2 (id=2, parent=0) (pubkey1 is writable)
  - instr3 (id=3, parent=2) (pubkey1 is writable)
     - instr4 (id=4, parent=3) (pubkey1 is writable)
        - instr5 (id=5, parent=4) (pubkey1 is writable, mutates pubkey1)
       collect delta of pubkey1
     collect delta of pubkey1 ONLY IF CHANGED AGAIN, from last time we took a snapshot of it.
  collect delta of pubkey1
- instr6 (id=6, parent=0)

 */

message InstructionTrace {
  string program_id = 1;
  repeated bytes account_pubkeys = 2; // eventually make it an index..
  bytes data = 3;  // 00030000001100 -> crank for Serum

  uint32 ordinal = 4; // for this instruction
  uint32 parent_ordinal = 5;

  repeated BalanceChange balance_changes = 7;
  repeated AccountChange account_changes = 8;
}

message BalanceChange {
  string pubkey = 1;
  uint64 prev_lamports = 2;
  uint64 new_lamports = 3;
}

message AccountChange {
  string pubkey = 1;
  bytes prev_data = 2;
  bytes new_data = 3;
}
